version: 2.1

parameters:
  used:
    type: boolean
    default: true

executors:
# environment that jobs will run in
  builder:
    docker:
      - image: toodleloo/builder:latest
        # auth:
        #   username: $ECR_USER
        #   password: $ECR_PASSWORD

commands:
# re-usable code snippets jobs can call
  install:
    parameters:
      prod:
        type: boolean
        default: false
    steps:
      - when:
          condition: << parameters.prod >>
          steps:
            - run: yarn --prod
      - unless:
          condition: << parameters.prod >>
          steps:
            - run: yarn
  allow-develop-diffs:
  # allows git diffs with develop
    steps:
      - run: |
          COMMIT_ID=$(git rev-parse HEAD)
          git checkout develop
          git checkout $COMMIT_ID
  docker-login-aws:
    steps:
      - run: aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ECR_ACCOUNT_URL
  ensure-repository-aws:
    parameters:
      repository:
        type: string
    steps:
      - run: echo <<parameters.repository>>
      - run: |
          aws ecr describe-repositories \
            --region $AWS_REGION \
            --repository-names <<parameters.repository>> \
            > /dev/null 2>&1 \
          || aws ecr create-repository \
            --region $AWS_REGION \
            --repository-name <<parameters.repository>> \
            --image-scanning-configuration scanOnPush=true

jobs:
# chunks of code run on an executor, see https://circleci.com/docs/2.0/jobs-steps/#jobs-overview
  build:
    executor: builder
    steps:
      - checkout
      - install
      - persist_to_workspace:
          root: .
          paths:
            - .
  unit-test:
    executor: builder
    steps:
      - attach_workspace:
          at: .
      - allow-develop-diffs
      - run: |
          scope=$(./build-scripts/get-packages-to-test.sh)
          scopeArgs=$(printf %s "${scope[@]/#/ --scope }")
          [ ! "$scopeArgs" = "" ] && yarn test:unit $scope
  build-push-image-aws:
    parameters:
      folder:
        type: string
      short_name:
        type: string
      tag:
        type: string
    executor: builder
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - docker-login-aws
      - ensure-repository-aws:
          repository: $short_name
      - run: |
          full_name=$AWS_ECR_ACCOUNT_URL/$short_name:$tag
          docker build -t $full_name $folder
          docker push $full_name

workflows:
# high level tasks performed automatically/scheduled
# every workflow will run on every commit unless filtered by branch
  version: 2
  test:
    unless: << pipeline.parameters.used >>
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - master
                - develop
      - unit-test:
          requires:
            - build
  build-push-images:
    when: << pipeline.parameters.used >>
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
                - develop
      - build-push-image-aws:
          folder: apps/app-sum
          short_name: app-sum
          tag: latest
          requires:
            - build
          context: docker
      - build-push-image-aws:
          folder: apps/app-multiply
          short_name: app-multiply
          tag: latest
          requires:
            - build
          context: docker
